/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package modul1.kalkulator;

/**
 *
 * @author hajarhanifah
 */
public class Temperature extends javax.swing.JFrame {

    /**
     * Creates new form Temperature
     */
    public Temperature() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbInput = new javax.swing.JLabel();
        tfInput = new javax.swing.JTextField();
        lbFrom = new javax.swing.JLabel();
        rbFromCelcius = new javax.swing.JRadioButton();
        rbFromFahrenheit = new javax.swing.JRadioButton();
        rbFromCalvin = new javax.swing.JRadioButton();
        lbTo = new javax.swing.JLabel();
        rbToCelcius = new javax.swing.JRadioButton();
        rbToFahrenheit = new javax.swing.JRadioButton();
        rbToCalvin = new javax.swing.JRadioButton();
        btnCalculate = new javax.swing.JButton();
        tfResult = new javax.swing.JTextField();
        lbResult = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbInput.setText("Input");

        tfInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfInputActionPerformed(evt);
            }
        });

        lbFrom.setText("From");

        rbFromCelcius.setText("Celcius");
        rbFromCelcius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFromCelciusActionPerformed(evt);
            }
        });

        rbFromFahrenheit.setText("Fahrenheit");
        rbFromFahrenheit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFromFahrenheitActionPerformed(evt);
            }
        });

        rbFromCalvin.setText("Calvin");
        rbFromCalvin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFromCalvinActionPerformed(evt);
            }
        });

        lbTo.setText("To");

        rbToCelcius.setText("Celcius");
        rbToCelcius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbToCelciusActionPerformed(evt);
            }
        });

        rbToFahrenheit.setText("Fahrenheit");
        rbToFahrenheit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbToFahrenheitActionPerformed(evt);
            }
        });

        rbToCalvin.setText("Calvin");
        rbToCalvin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbToCalvinActionPerformed(evt);
            }
        });

        btnCalculate.setText("Calculate");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        tfResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfResultActionPerformed(evt);
            }
        });

        lbResult.setText("Result");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbInput)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tfInput, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rbFromCalvin)
                                            .addComponent(rbFromFahrenheit)
                                            .addComponent(rbFromCelcius)
                                            .addComponent(lbFrom))
                                        .addGap(74, 74, 74)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rbToCalvin)
                                            .addComponent(rbToFahrenheit)
                                            .addComponent(rbToCelcius)
                                            .addComponent(lbTo)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(btnCalculate)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lbResult)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfResult, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbInput)
                    .addComponent(tfInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbFrom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbFromCelcius)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbFromFahrenheit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbFromCalvin))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbTo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbToCelcius)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbToFahrenheit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbToCalvin)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCalculate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbResult)
                    .addComponent(tfResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfInputActionPerformed
        inputTemperature = Double.parseDouble(tfInput.getText());
    }//GEN-LAST:event_tfInputActionPerformed

    private void rbFromCelciusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFromCelciusActionPerformed
        rbFromFahrenheit.setSelected(false);
        rbFromCalvin.setSelected(false);
        inputFrom = rbFromCelcius.getText();
    }//GEN-LAST:event_rbFromCelciusActionPerformed

    private void rbFromFahrenheitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFromFahrenheitActionPerformed
        rbFromCelcius.setSelected(false);
        rbFromCalvin.setSelected(false);
        inputFrom = rbFromFahrenheit.getText();
    }//GEN-LAST:event_rbFromFahrenheitActionPerformed

    private void rbFromCalvinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFromCalvinActionPerformed
        rbFromFahrenheit.setSelected(false);
        rbFromCelcius.setSelected(false);
        inputFrom = rbFromCalvin.getText();
    }//GEN-LAST:event_rbFromCalvinActionPerformed

    private void rbToCelciusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbToCelciusActionPerformed
        rbToFahrenheit.setSelected(false);
        rbToCalvin.setSelected(false);
        inputTo = rbToCelcius.getText();


    }//GEN-LAST:event_rbToCelciusActionPerformed

    private void rbToFahrenheitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbToFahrenheitActionPerformed
        rbToCelcius.setSelected(false);
        rbToCalvin.setSelected(false);
        inputTo = rbToFahrenheit.getText();
    }//GEN-LAST:event_rbToFahrenheitActionPerformed

    private void rbToCalvinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbToCalvinActionPerformed
        rbToFahrenheit.setSelected(false);
        rbToCelcius.setSelected(false);
        inputTo = rbToCalvin.getText();
    }//GEN-LAST:event_rbToCalvinActionPerformed

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        calculateTheTemperature();
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void tfResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfResultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfResultActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Temperature.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Temperature.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Temperature.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Temperature.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Temperature().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalculate;
    private javax.swing.JLabel lbFrom;
    private javax.swing.JLabel lbInput;
    private javax.swing.JLabel lbResult;
    private javax.swing.JLabel lbTo;
    private javax.swing.JRadioButton rbFromCalvin;
    private javax.swing.JRadioButton rbFromCelcius;
    private javax.swing.JRadioButton rbFromFahrenheit;
    private javax.swing.JRadioButton rbToCalvin;
    private javax.swing.JRadioButton rbToCelcius;
    private javax.swing.JRadioButton rbToFahrenheit;
    private javax.swing.JTextField tfInput;
    private javax.swing.JTextField tfResult;
    // End of variables declaration//GEN-END:variables
public String inputFrom, inputTo;
public double inputTemperature, result;
public void calculateTheTemperature(){
   if(inputFrom == "Celcius"){
       if(inputTo == "Celcius"){
           tfResult.setText(tfInput.getText());
       }else if(inputTo == "Fahrenheit"){
           // formula (c * 9/5) + 32
           result = (inputTemperature * (9/5)) + 32;
           tfResult.setText(Double.toString(result));
       }else { // Calvin
          // formula c + 237,15
          result = inputTemperature + 273.15;
          tfResult.setText(Double.toString(result));
          
       }
   } else if (inputFrom == "Fahrenheit"){
       if(inputTo == "Celcius"){
           // formula : f-32 X5/9
           result = (inputTemperature - 32) * (5/9);
           tfResult.setText(Double.toString(result));
       }else if(inputTo == "Fahrenheit"){
           tfResult.setText(tfInput.getText());
       }else { // Calvin
           // Formula : f-32 x 5/9 + 273,15
           result = (inputTemperature - 32) * (5/9) + 273.15;
           tfResult.setText(Double.toString(result));
       }
   }else{ //Calvin
       if(inputTo == "Celcius"){
           // formula : k -273,5
           result = inputTemperature - 273.15;
           tfResult.setText(Double.toString(result));
       }else if(inputTo == "Fahrenheit"){
           // formula : k - 273,15 * 9/5 + 32
           result = (inputTemperature - 273.5) * (9/5) + 32;
           tfResult.setText(Double.toString(result));
       
       }else { // Calvin
           tfResult.setText(tfInput.getText());
       }
   }
}
}
